<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wxm.mapper.OAContractCirculationMapper" >
  <resultMap id="BaseResultMap" type="com.wxm.model.OAContractCirculation" >
    <id column="CONTRACT_ID" property="contractId" jdbcType="INTEGER" />
    <result column="TEMPLATE_ID" property="templateId" jdbcType="INTEGER" />
    <result column="PROCESSINSTANCE_ID" property="processInstanceId" jdbcType="NVARCHAR" />
    <result column="CONTRACT_NAME" property="contractName" jdbcType="NVARCHAR" />
    <result column="CONTRACT_BUYER" property="contractBuyer" jdbcType="NVARCHAR" />
    <result column="CONTRACT_SELLER" property="contractSeller" jdbcType="NVARCHAR" />
    <result column="CONTRACT_MONEY" property="contractMoney" jdbcType="INTEGER" />
    <result column="ATTACHMENT_NAME" property="attachmentName" jdbcType="NVARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="ENTERPRISE_ID" property="enterpriseId" jdbcType="INTEGER" />
    <result column="CONTRACT_REOPEN" property="contractReopen" jdbcType="INTEGER" />
    <result column="CONTRACT_STATUS" property="contractStatus" jdbcType="NVARCHAR" />
    <result column="WORK_STATUS" property="workStatus" jdbcType="INTEGER" />
    <result column="DESCRIPTION" property="description" jdbcType="NVARCHAR" />
    <result column="WORK_DATE" property="workDate" jdbcType="NVARCHAR" />
    <result column="CONTRACT_SERIAL_NUMBER" property="contractSerialNumber" jdbcType="NVARCHAR" />
    <result column="ARCHIVE_SERIAL_NUMBER" property="archiveSerialNumber" jdbcType="NVARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.wxm.model.OAContractCirculationWithBLOBs" extends="BaseResultMap" >
    <result column="CONTRACT_HTML" property="contractHtml" jdbcType="LONGVARCHAR" />
    <result column="CONTRACT_PDF" property="contractPdf" jdbcType="LONGVARBINARY" />
    <result column="ATTACHMENT_CONTENT" property="attachmentContent" jdbcType="LONGVARBINARY" />
  </resultMap>

  <resultMap id="hashmap" type="com.wxm.entity.ReportItem" >
    <result column="TEMPLATE_NAME" property="name" jdbcType="NVARCHAR" />
    <result column="y" property="y" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    CONTRACT_ID, TEMPLATE_ID,CONTRACT_REOPEN,PROCESSINSTANCE_ID, CONTRACT_NAME,CONTRACT_BUYER,CONTRACT_SELLER,CONTRACT_MONEY,
    ATTACHMENT_NAME,WORK_STATUS, USER_ID, ENTERPRISE_ID,CONTRACT_STATUS, DESCRIPTION,WORK_DATE, CONTRACT_SERIAL_NUMBER,ARCHIVE_SERIAL_NUMBER,CREATE_TIME
  </sql>
  <sql id="Blob_Column_List" >
    CONTRACT_HTML, CONTRACT_PDF,ATTACHMENT_CONTENT
  </sql>
  <select id="count" resultMap="hashmap" >
    SELECT t1.TEMPLATE_NAME,t2.y from OA_CONTRACT_TEMPLATE t1,
    (SELECT TEMPLATE_ID,count(CONTRACT_ID) as y from OA_CONTRACT_CIRCULATION
     where CREATE_TIME <![CDATA[ >= ]]> #{startTime} AND  CREATE_TIME <![CDATA[ <= ]]> #{endTime} and CONTRACT_STATUS='completed' and DESCRIPTION = 'template'
     group by TEMPLATE_ID) t2 where t1.TEMPLATE_ID=t2.TEMPLATE_ID ORDER by t2.y DESC
  </select>
  <select id="selectByMaxId" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> from OA_CONTRACT_CIRCULATION WHERE CONTRACT_ID=(select max(CONTRACT_ID) from OA_CONTRACT_CIRCULATION)
  </select>

  <select id="groupUserReport" resultType="java.lang.Integer">
    select count(*) from OA_CONTRACT_CIRCULATION where  CREATE_TIME <![CDATA[ >= ]]> #{startTime} AND  CREATE_TIME <![CDATA[ <= ]]> #{endTime}
    <if test="userId != null" >
      and USER_ID=#{userId}
    </if>
    <if test="contractType != null" >
      and DESCRIPTION=#{contractType}
    </if>
    <if test="templateId != null" >
      and TEMPLATE_ID=#{templateId}
    </if>
    <if test="contractStatus != null" >
      and CONTRACT_STATUS=#{contractStatus}
    </if>
    <if test="contractReopen != null" >
      and CONTRACT_REOPEN=#{contractReopen}
    </if>
  </select>

  <select id="groupEnterpriseReport" resultMap="hashmap">
    select ENTERPRISE_ID as id,count(*) as y from OA_CONTRACT_CIRCULATION where
    CREATE_TIME <![CDATA[ >= ]]> #{startTime} AND  CREATE_TIME <![CDATA[ <= ]]> #{endTime}
    <if test="enterpriseId != null" >
      and ENTERPRISE_ID=#{enterpriseId}
    </if>
    <if test="contractType != null" >
      and DESCRIPTION=#{contractType}
    </if>
    <if test="templateId != null" >
      and TEMPLATE_ID=#{templateId}
    </if>
    <if test="contractStatus != null" >
      and CONTRACT_STATUS=#{contractStatus}
    </if>
    <if test="contractReopen != null" >
      and CONTRACT_REOPEN=#{contractReopen}
    </if>
    group by ENTERPRISE_ID
  </select>


  <select id="groupFieldEnterpriseReport" resultMap="hashmap">
    SELECT tmp.ENTERPRISE_ID as id,count(tmp.ENTERPRISE_ID) as y FROM (SELECT DISTINCT(CONTRACT_ID),circulation.USER_ID,
        circulation.PROCESSINSTANCE_ID,circulation.CONTRACT_REOPEN,circulation.TEMPLATE_ID,circulation.ENTERPRISE_ID
        from OA_CONTRACT_CIRCULATION circulation LEFT OUTER JOIN ACT_HI_VARINST var
    ON circulation.PROCESSINSTANCE_ID = var.PROC_INST_ID_ WHERE 1=1
      <if test="enterpriseId != null" >
        and circulation.ENTERPRISE_ID=#{enterpriseId}
      </if>
      <if test="contractType != null" >
        and circulation.DESCRIPTION=#{contractType}
      </if>
      <if test="templateId != null" >
        and circulation.TEMPLATE_ID=#{templateId}
      </if>
      <if test="contractStatus != null" >
        and circulation.CONTRACT_STATUS=#{contractStatus}
      </if>
      <if test="contractReopen != null" >
        and circulation.CONTRACT_REOPEN=#{contractReopen}
      </if>
      <if test="field != null" >
        and var.NAME_=#{field}
      </if>
      <if test="condition != null" >
        and var.TEXT_ like CONCAT('%',#{condition},'%' )
      </if>
       ) tmp group by tmp.ENTERPRISE_ID
  </select>

  <select id="groupFieldUserReport" resultMap="hashmap">
    SELECT tmp.USER_ID,count(tmp.USER_ID) as y FROM (SELECT DISTINCT(CONTRACT_ID),circulation.USER_ID,
    circulation.PROCESSINSTANCE_ID,circulation.CONTRACT_REOPEN,circulation.TEMPLATE_ID,circulation.ENTERPRISE_ID
    from OA_CONTRACT_CIRCULATION circulation LEFT OUTER JOIN ACT_HI_VARINST var
    ON circulation.PROCESSINSTANCE_ID = var.PROC_INST_ID_ WHERE 1=1
    <if test="userId != null" >
      and circulation.USER_ID=#{userId}
    </if>
    <if test="contractType != null" >
      and circulation.DESCRIPTION=#{contractType}
    </if>
    <if test="templateId != null" >
      and circulation.TEMPLATE_ID=#{templateId}
    </if>
    <if test="contractStatus != null" >
      and circulation.CONTRACT_STATUS=#{contractStatus}
    </if>
    <if test="contractReopen != null" >
      and circulation.CONTRACT_REOPEN=#{contractReopen}
    </if>
    <if test="field != null" >
      and var.NAME_=#{field}
    </if>
    <if test="condition != null" >
      and var.TEXT_ like CONCAT('%',#{condition},'%' )
    </if>
    ) tmp group by tmp.USER_ID
  </select>
  <select id="total" resultType="java.lang.Integer">
    SELECT count(CONTRACT_ID) from OA_CONTRACT_CIRCULATION
         where CREATE_TIME <![CDATA[ >= ]]> #{startTime} AND  CREATE_TIME <![CDATA[ <= ]]> #{endTime}
        <if test="contractType != null" >
          and DESCRIPTION = #{contractType}
        </if>
        <if test="contractStatus != null" >
          and CONTRACT_STATUS = #{contractStatus}
        </if>
        <if test="templateId != null" >
          and TEMPLATE_ID = #{templateId}
        </if>
        <if test="contractReopen != null" >
          and CONTRACT_REOPEN = #{contractReopen}
        </if>
  </select>
    <select id="groupCount" resultType="java.lang.Integer">
        SELECT count(*) from (select oa_user.USER_ID from OA_CONTRACT_CIRCULATION contract LEFT OUTER JOIN OA_USER oa_user on contract.USER_ID=oa_user.USER_ID
      where CREATE_TIME <![CDATA[ >= ]]> #{startTime} AND  CREATE_TIME  <![CDATA[ <= ]]> #{endTime} and CONTRACT_REOPEN = 1 and CONTRACT_STATUS='completed' and DESCRIPTION = 'template'
      group by oa_user.USER_ID) groupReject
    </select>
  <select id="group" resultMap="hashmap">
      select  top ${limit} groupReject.TEMPLATE_NAME,groupReject.y from (select oa_user.USER_ID,oa_user.USER_NAME as TEMPLATE_NAME,count(contract.USER_ID) as y from OA_CONTRACT_CIRCULATION contract LEFT OUTER JOIN OA_USER oa_user on contract.USER_ID=oa_user.USER_ID
      where CREATE_TIME <![CDATA[ >= ]]> #{startTime} AND  CREATE_TIME  <![CDATA[ <= ]]> #{endTime} and CONTRACT_REOPEN = 1 and CONTRACT_STATUS='completed' and DESCRIPTION = 'template'
      group by oa_user.USER_ID,oa_user.USER_NAME) groupReject where groupReject.USER_ID not in (select  top ${offset} oa_user.USER_ID as y from OA_CONTRACT_CIRCULATION contract LEFT OUTER JOIN OA_USER oa_user on contract.USER_ID=oa_user.USER_ID
      where CREATE_TIME <![CDATA[ >= ]]> #{startTime} AND  CREATE_TIME  <![CDATA[ <= ]]> #{endTime} and CONTRACT_REOPEN = 1 and CONTRACT_STATUS='completed' and DESCRIPTION = 'template'
      group by oa_user.USER_ID,oa_user.USER_NAME)
  </select>
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from OA_CONTRACT_CIRCULATION
    where CONTRACT_ID = #{contractId,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from OA_CONTRACT_CIRCULATION
    where CONTRACT_ID = #{contractId,jdbcType=INTEGER}
  </select>

  <select id="selectByProcessInstanceId"  resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from OA_CONTRACT_CIRCULATION
    where PROCESSINSTANCE_ID = #{processInstanceId,jdbcType=NVARCHAR}
  </select>

  <select id="selectBaseByProcessInstanceId"  resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from OA_CONTRACT_CIRCULATION
    where PROCESSINSTANCE_ID = #{processInstanceId,jdbcType=NVARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from OA_CONTRACT_CIRCULATION
    where CONTRACT_ID = #{contractId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wxm.model.OAContractCirculationWithBLOBs" useGeneratedKeys="true"  keyProperty = "contractId" keyColumn = "CONTRACT_ID">
    insert into OA_CONTRACT_CIRCULATION (CONTRACT_ID, TEMPLATE_ID,CONTRACT_REOPEN, PROCESSINSTANCE_ID,CONTRACT_NAME,
    CONTRACT_BUYER,CONTRACT_SELLER,CONTRACT_MONEY,ATTACHMENT_NAME,WORK_STATUS
      USER_ID,ENTERPRISE_ID, CONTRACT_STATUS, DESCRIPTION, WORK_DATE, CONTRACT_SERIAL_NUMBER,ARCHIVE_SERIAL_NUMBER,
      CREATE_TIME, CONTRACT_HTML, CONTRACT_PDF,ATTACHMENT_CONTENT
      )
    values (#{contractId,jdbcType=INTEGER}, #{templateId,jdbcType=INTEGER}, #{contractReopen,jdbcType=INTEGER},#{processInstanceId,jdbcType=NVARCHAR}, #{contractName,jdbcType=NVARCHAR},#{attachmentName,jdbcType=NVARCHAR},#{workStatus,jdbcType=INTEGER},
      #{userId,jdbcType=INTEGER},#{enterpriseId,jdbcType=INTEGER}, #{contractStatus,jdbcType=NVARCHAR}, #{description,jdbcType=NVARCHAR}, #{workDate,jdbcType=NVARCHAR}, #{contractSerialNumber,jdbcType=NVARCHAR}, #{archiveSerialNumber,jdbcType=NVARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{contractHtml,jdbcType=LONGVARCHAR}, #{contractPdf,jdbcType=LONGVARBINARY}, #{attachmentContent,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wxm.model.OAContractCirculationWithBLOBs" >
    insert into OA_CONTRACT_CIRCULATION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="contractId != null" >
        CONTRACT_ID,
      </if>
      <if test="templateId != null" >
        TEMPLATE_ID,
      </if>
      <if test="contractReopen != null" >
        CONTRACT_REOPEN,
      </if>
      <if test="processInstanceId != null" >
        PROCESSINSTANCE_ID,
      </if>

      <if test="contractName != null" >
        CONTRACT_NAME,
      </if>
      <if test="contractBuyer != null" >
        CONTRACT_BUYER,
      </if>
      <if test="contractSeller != null" >
        CONTRACT_SELLER,
      </if>
      <if test="contractMoney != null" >
        CONTRACT_MONEY,
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME,
      </if>
      <if test="workStatus != null" >
        WORK_STATUS,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="enterpriseId != null" >
        ENTERPRISE_ID,
      </if>
      <if test="contractStatus != null" >
        CONTRACT_STATUS,
      </if>
      <if test="description != null" >
        DESCRIPTION,
      </if>
      <if test="workDate != null" >
        WORK_DATE,
      </if>
      <if test="contractSerialNumber != null" >
        CONTRACT_SERIAL_NUMBER,
      </if>
      <if test="archiveSerialNumber != null" >
        ARCHIVE_SERIAL_NUMBER,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="contractHtml != null" >
        CONTRACT_HTML,
      </if>
      <if test="contractPdf != null" >
        CONTRACT_PDF,
      </if>
      <if test="attachmentContent != null" >
        ATTACHMENT_CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="contractId != null" >
        #{contractId,jdbcType=INTEGER},
      </if>
      <if test="templateId != null" >
        #{templateId,jdbcType=INTEGER},
      </if>
      <if test="contractReopen != null" >
        #{contractReopen,jdbcType=INTEGER},
      </if>
      <if test="processInstanceId != null" >
        #{processInstanceId,jdbcType=NVARCHAR},
      </if>
      <if test="contractName != null" >
        #{contractName,jdbcType=NVARCHAR},
      </if>
      <if test="contractBuyer != null" >
        #{contractBuyer,jdbcType=NVARCHAR},
      </if>
      <if test="contractSeller != null" >
        #{contractSeller,jdbcType=NVARCHAR},
      </if>
      <if test="contractMoney != null" >
        #{contractMoney,jdbcType=INTEGER},
      </if>
      <if test="attachmentName != null" >
        #{attachmentName,jdbcType=NVARCHAR},
      </if>
      <if test="workStatus != null" >
        #{workStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="enterpriseId != null" >
        #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="contractStatus != null" >
        #{contractStatus,jdbcType=NVARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=NVARCHAR},
      </if>
      <if test="workDate != null" >
        #{workDate,jdbcType=NVARCHAR},
      </if>
      <if test="contractSerialNumber != null" >
        #{contractSerialNumber,jdbcType=NVARCHAR},
      </if>
      <if test="archiveSerialNumber != null" >
        #{archiveSerialNumber,jdbcType=NVARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="contractHtml != null" >
        #{contractHtml,jdbcType=LONGVARCHAR},
      </if>
      <if test="contractPdf != null" >
        #{contractPdf,jdbcType=LONGVARBINARY},
      </if>
      <if test="attachmentContent != null" >
        #{attachmentContent,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wxm.model.OAContractCirculationWithBLOBs" useGeneratedKeys="true"  keyProperty = "contractId" keyColumn = "CONTRACT_ID">
    update OA_CONTRACT_CIRCULATION
    <set >
      <if test="templateId != null" >
        TEMPLATE_ID = #{templateId,jdbcType=INTEGER},
      </if>
      <if test="contractReopen != null" >
        CONTRACT_REOPEN = #{contractReopen,jdbcType=INTEGER},
      </if>
      <if test="processInstanceId != null" >
        PROCESSINSTANCE_ID=#{processInstanceId,jdbcType=NVARCHAR},
      </if>
      <if test="contractName != null" >
        CONTRACT_NAME = #{contractName,jdbcType=NVARCHAR},
      </if>
      <if test="contractBuyer != null" >
        CONTRACT_BUYER = #{contractBuyer,jdbcType=NVARCHAR},
      </if>
      <if test="contractSeller != null" >
        CONTRACT_SELLER = #{contractSeller,jdbcType=NVARCHAR},
      </if>
      <if test="contractMoney != null" >
        CONTRACT_MONEY = #{contractMoney,jdbcType=INTEGER},
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME = #{attachmentName,jdbcType=NVARCHAR},
      </if>
      <if test="workStatus != null" >
        WORK_STATUS = #{workStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="enterpriseId != null" >
        ENTERPRISE_ID = #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="contractStatus != null" >
        CONTRACT_STATUS = #{contractStatus,jdbcType=NVARCHAR},
      </if>
      <if test="description != null" >
        DESCRIPTION = #{description,jdbcType=NVARCHAR},
      </if>
      <if test="workDate != null" >
        WORK_DATE = #{workDate,jdbcType=NVARCHAR},
      </if>
      <if test="contractSerialNumber != null" >
        CONTRACT_SERIAL_NUMBER = #{contractSerialNumber,jdbcType=NVARCHAR},
      </if>
      <if test="archiveSerialNumber != null" >
        ARCHIVE_SERIAL_NUMBER = #{archiveSerialNumber,jdbcType=NVARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="contractHtml != null" >
        CONTRACT_HTML = #{contractHtml,jdbcType=LONGVARCHAR},
      </if>
      <if test="contractPdf != null" >
        CONTRACT_PDF = #{contractPdf,jdbcType=LONGVARBINARY},
      </if>
      <if test="attachmentContent != null" >
        ATTACHMENT_CONTENT = #{attachmentContent,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where CONTRACT_ID = #{contractId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.wxm.model.OAContractCirculationWithBLOBs" >
    update OA_CONTRACT_CIRCULATION
    set TEMPLATE_ID = #{templateId,jdbcType=INTEGER},
      CONTRACT_REOPEN = #{contractReopen,jdbcType=INTEGER},
      PROCESSINSTANCE_ID = #{processInstanceId,jdbcType=NVARCHAR},
      CONTRACT_NAME = #{contractName,jdbcType=NVARCHAR},
      CONTRACT_BUYER = #{contractBuyer,jdbcType=NVARCHAR},
      CONTRACT_SELLER = #{contractSeller,jdbcType=NVARCHAR},
      CONTRACT_MONEY = #{contractMoney,jdbcType=INTEGER},
      ATTACHMENT_NAME = #{attachmentName,jdbcType=NVARCHAR},
      WORK_STATUS = #{workStatus,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      ENTERPRISE_ID = #{enterpriseId,jdbcType=INTEGER},
      CONTRACT_STATUS = #{contractStatus,jdbcType=NVARCHAR},
      DESCRIPTION = #{description,jdbcType=NVARCHAR},
      WORK_DATE = #{workDate,jdbcType=NVARCHAR},
      CONTRACT_SERIAL_NUMBER = #{contractSerialNumber,jdbcType=NVARCHAR},
      ARCHIVE_SERIAL_NUMBER = #{archiveSerialNumber,jdbcType=NVARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CONTRACT_HTML = #{contractHtml,jdbcType=LONGVARCHAR},
      CONTRACT_PDF = #{contractPdf,jdbcType=LONGVARBINARY},
      ATTACHMENT_CONTENT = #{attachmentContent,jdbcType=LONGVARBINARY}
    where CONTRACT_ID = #{contractId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wxm.model.OAContractCirculation" >
    update OA_CONTRACT_CIRCULATION
    set TEMPLATE_ID = #{templateId,jdbcType=INTEGER},
      CONTRACT_REOPEN = #{contractReopen,jdbcType=INTEGER},
      PROCESSINSTANCE_ID = #{processInstanceId,jdbcType=NVARCHAR},
      CONTRACT_NAME = #{contractName,jdbcType=NVARCHAR},
      CONTRACT_BUYER = #{contractBuyer,jdbcType=NVARCHAR},
      CONTRACT_SELLER = #{contractSeller,jdbcType=NVARCHAR},
      CONTRACT_MONEY = #{contractMoney,jdbcType=INTEGER},
      ATTACHMENT_NAME = #{attachmentName,jdbcType=NVARCHAR},
      WORK_STATUS = #{workStatus,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      ENTERPRISE_ID = #{enterpriseId,jdbcType=INTEGER},
      CONTRACT_STATUS = #{contractStatus,jdbcType=NVARCHAR},
      DESCRIPTION = #{description,jdbcType=NVARCHAR},
      WORK_DATE = #{workDate,jdbcType=NVARCHAR},
      CONTRACT_SERIAL_NUMBER = #{contractSerialNumber,jdbcType=NVARCHAR},
      ARCHIVE_SERIAL_NUMBER = #{archiveSerialNumber,jdbcType=NVARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where CONTRACT_ID = #{contractId,jdbcType=INTEGER}
  </update>
</mapper>